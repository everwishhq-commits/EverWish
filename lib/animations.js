"use client";
import { motion, AnimatePresence } from "framer-motion";
import { useEffect, useMemo, useState } from "react";

/* üé® Opciones por categor√≠a (10 por cada una) */
const CATEGORIES = {
  easter: {
    options: {
      "Flowers üå∏": ["üå∑", "üåº", "üå∏"],
      "Bunnies üê∞": ["üê∞"],
      "Eggs ü•ö": ["ü•ö"],
      "Chicks üê£": ["üê£"],
      "Butterflies ü¶ã": ["ü¶ã"],
      "Grass üåø": ["üåø"],
      "Sun ‚òÄÔ∏è": ["‚òÄÔ∏è"],
      "Clouds ‚òÅÔ∏è": ["‚òÅÔ∏è"],
      "Carrots ü•ï": ["ü•ï"],
      "Basket üß∫": ["üß∫"],
    },
  },
  halloween: {
    options: {
      "Pumpkins üéÉ": ["üéÉ"],
      "Ghosts üëª": ["üëª"],
      "Candies üç¨": ["üç¨"],
      "Bats ü¶á": ["ü¶á"],
      "Skulls üíÄ": ["üíÄ"],
      "Spiders üï∑Ô∏è": ["üï∑Ô∏è"],
      "Webs üï∏Ô∏è": ["üï∏Ô∏è"],
      "Bones ü¶¥": ["ü¶¥"],
      "Lanterns ü™î": ["ü™î"],
      "Moons üåô": ["üåô"],
    },
  },
  july4: {
    options: {
      "Fireworks üéÜ": ["üéÜ"],
      "Flags üá∫üá∏": ["üá∫üá∏"],
      "Stars ‚≠ê": ["‚≠ê"],
      "Eagles ü¶Ö": ["ü¶Ö"],
      "Hearts ‚ù§Ô∏è": ["‚ù§Ô∏è"],
      "Balloons üéà": ["üéà"],
      "Sparkles ‚ú®": ["‚ú®"],
      "Lights üí°": ["üí°"],
      "Parade üéâ": ["üéâ"],
      "Confetti üéä": ["üéä"],
    },
  },
  animals: {
    options: {
      "Paws üêæ": ["üêæ"],
      "Dogs üê∂": ["üê∂"],
      "Cats üê±": ["üê±"],
      "Bones ü¶¥": ["ü¶¥"],
      "Balls üéæ": ["üéæ"],
      "Fish üêü": ["üêü"],
      "Birds üê¶": ["üê¶"],
      "Hearts ‚ù§Ô∏è": ["‚ù§Ô∏è"],
      "Bowls ü•£": ["ü•£"],
      "Stars ‚ú®": ["‚ú®"],
    },
  },
  love: {
    options: {
      "Hearts ‚ù§Ô∏è": ["‚ù§Ô∏è"],
      "Kisses üíã": ["üíã"],
      "Roses üåπ": ["üåπ"],
      "Rings üíç": ["üíç"],
      "Cupid üèπ": ["üèπ"],
      "Stars ‚ú®": ["‚ú®"],
      "Balloons üéà": ["üéà"],
      "Gifts üéÅ": ["üéÅ"],
      "Doves üïäÔ∏è": ["üïäÔ∏è"],
      "Music üé∂": ["üé∂"],
    },
  },
  default: {
    options: {
      "Stars ‚ú®": ["‚ú®"],
      "Moons üåô": ["üåô"],
      "Clouds ‚òÅÔ∏è": ["‚òÅÔ∏è"],
      "Lights üí°": ["üí°"],
      "Dreams üåà": ["üåà"],
      "Sparkles ‚ú®": ["‚ú®"],
      "Balloons üéà": ["üéà"],
      "Hearts ‚ù§Ô∏è": ["‚ù§Ô∏è"],
      "Snow ‚ùÑÔ∏è": ["‚ùÑÔ∏è"],
      "Confetti üéä": ["üéä"],
    },
  },
};

/* üîé slug ‚Üí categor√≠a */
export function getAnimationsForSlug(slug = "") {
  const s = (slug || "").toLowerCase();
  if (s.includes("easter")) return "easter";
  if (s.includes("halloween") || s.includes("ghost")) return "halloween";
  if (s.includes("july") || s.includes("4th")) return "july4";
  if (s.includes("animal") || s.includes("pet")) return "animals";
  if (s.includes("love") || s.includes("valentine")) return "love";
  return "default";
}

/* üìã opciones (10 textos) para el dropdown */
export function getAnimationOptionsForSlug(slug = "") {
  const cat = getAnimationsForSlug(slug);
  return Object.keys(CATEGORIES[cat].options);
}

/* ‚ú® Overlay √∫nico: SOLO la animaci√≥n seleccionada */
export function AnimationOverlay({ slug, animation }) {
  const [items, setItems] = useState([]);
  const cat = useMemo(() => getAnimationsForSlug(slug), [slug]);

  // set activo (solo lo del dropdown)
  const activeSet = useMemo(() => {
    const options = CATEGORIES[cat].options;
    return options[animation] || options[Object.keys(options)[0]];
  }, [cat, animation]);

  // regenerar part√≠culas INMEDIATAMENTE cuando cambia la opci√≥n
  useEffect(() => {
    const total = 18;
    const next = Array.from({ length: total }, (_, i) => ({
      id: i,
      emoji: activeSet[Math.floor(Math.random() * activeSet.length)],
      left: `${Math.random() * 100}%`,
      size: `${16 + Math.random() * 22}px`,
      delay: Math.random() * 0.3,          // ‚ö° casi inmediato al cambiar
      duration: 16 + Math.random() * 10,   // üê¢ lento y armonioso
      opacity: 0.45 + Math.random() * 0.35,
      drift: (Math.random() - 0.5) * 30,   // leves variaciones horizontales
      startY: 110 + Math.random() * 10,    // siempre desde abajo
      endY: -10,
    }));
    setItems(next);
  }, [activeSet]);

  return (
    <AnimatePresence mode="wait">
      <motion.div
        key={animation} // fuerza remount instant√°neo
        className="fixed inset-0 pointer-events-none z-[500] overflow-hidden"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        transition={{ duration: 0.2 }}
      >
        {items.map((it) => (
          <motion.div
            key={it.id}
            initial={{ y: `${it.startY}vh`, opacity: 0, scale: 0.9 }}
            animate={{
              y: `${it.endY}vh`,
              opacity: it.opacity,
              scale: 1,
              x: [0, it.drift, -it.drift, 0],
              rotate: [0, 8, -6, 0],
            }}
            transition={{
              duration: it.duration,
              repeat: Infinity,
              ease: "easeInOut",
              delay: it.delay,
            }}
            style={{
              position: "absolute",
              left: it.left,
              fontSize: it.size,
              userSelect: "none",
            }}
          >
            {it.emoji}
          </motion.div>
        ))}
      </motion.div>
    </AnimatePresence>
  );
          }
